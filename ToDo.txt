
#features
<autocomplete the rest bc of few shot prompting on the first challenges>
    
-Complete level 4. Start with researching the notebook
-Weapon/Inventory/character selection with different models as weapons. Claude 3.5 premium fee

#prompt

I need some help with my next.js app. I am attempting to make an educational game for prompt-engineering best practices. The user will advance through decks of tasks by correctly solving prompt engineering challenges. If a user is answering wrong they will loose some of their health bar and revert back to the start of the game if they loose all health.

I have implemented a component in text-adventure-game.tsx based on the jupyter notebooks 00-03 in /game-notebooks/ so far. I am currently in the process of populating my game levels with the assignments tasked in these notebooks, in their respective "Exercises" sections. As an example, level 1 of the game contains 2 challenges because notebook 1 has 2 exercises, while level 2 of the game contains 3 challenges because notebook 2 has 3 exercises.Start by looking through the notebook exercises and how the answers are evaluated, as I want my game to be evaluated as close as possible as how it it's counterpart is evaluated in the notebook.




Think step by step on how to implement this and suggest code edits with complete blocks so that the changes are easy to copy paste.



#one-liner
npx ai-digest -i . -o pe-game-summary-work.md --show-output-files && mv pe-game-summary-work.md /mnt/c/Users/W36059/Desktop/



#problems
2.5 levels? its supposed a third ex in level 2 (ex 2.3)